{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","Helpers.js","components/ControlPresupuesto.js","App.js","serviceWorker.js","index.js"],"names":["Error","mensaje","className","Pregunta","props","guardarPresupuesto","guardarPregunta","guardarRestante","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombreGasto","guardarNombreGasto","cantidadGasto","guardarCantidadGasto","gasto","id","shortid","generate","Gasto","Listado","gastos","map","key","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","pregunta","crearGasto","guardarGastos","useEffect","listadoGastos","presupuestoRestante","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85ff838e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Error = ({mensaje}) => (\r\n    <p className=\"alert alert-danger error\">{mensaje}</p>\r\n);\r\n\r\nexport default Error;","import React, { Fragment, useState } from \"react\";\r\nimport Error from './Error';\r\n\r\nfunction Pregunta(props) {\r\n    const { guardarPresupuesto, guardarPregunta, guardarRestante} = props;\r\n  // Definir el state\r\n  const [cantidad, guardarCantidad] = useState(0);\r\n  const [error, guardarError] = useState(false);\r\n\r\n  // Validar el presupuesto\r\n  const agregarPresupuesto = e => {\r\n    e.preventDefault();\r\n    // validar\r\n    if (cantidad <= 0 || isNaN(cantidad)) {\r\n      guardarError(true);\r\n      return;\r\n    } else {\r\n      // Enviar al componente Principal\r\n      guardarError(false);\r\n      guardarPresupuesto(cantidad);\r\n      guardarRestante(cantidad);\r\n      guardarPregunta(false)\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h2>Coloca tu presupuesto</h2>\r\n      {error ? <Error mensaje = \"El presupuesto es incorrecto\"/> : null}\r\n      <form onSubmit={agregarPresupuesto}>\r\n        <input\r\n          type=\"number\"\r\n          className=\"u-full-width\"\r\n          placeholder=\"Agrega tu presupuesto\"\r\n          onChange={e => guardarCantidad(parseInt(e.target.value, 10))}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"button-primary u-full-width\"\r\n          value=\"Definir Presupuesto\"\r\n        />\r\n      </form>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Pregunta;\r\n","import React, {useState} from 'react';\r\nimport Error from './Error';\r\nimport shortid from 'shortid';\r\n\r\nfunction Formulario(props){\r\n    const {guardarGasto} = props;\r\n    const {guardarCrearGasto} = props;\r\n    // Crear los states\r\n    const [nombreGasto, guardarNombreGasto] = useState('');\r\n    const [cantidadGasto, guardarCantidadGasto] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    // cuando se agrega al gasto\r\n    const agregarGasto = e =>{\r\n        e.preventDefault();\r\n\r\n        // validar\r\n        if (cantidadGasto <= 0 || isNaN(cantidadGasto) || nombreGasto === '') {\r\n            guardarError(true);\r\n            return;\r\n          } else {\r\n            \r\n            //construir objeto de gasto\r\n            const gasto = {\r\n                nombreGasto,\r\n                cantidadGasto,\r\n                id: shortid.generate()\r\n            }\r\n            // Enviar al componente Principal\r\n            guardarGasto(gasto);\r\n            guardarError(false);\r\n            guardarCrearGasto(true);\r\n            // resetear el form\r\n            guardarCantidadGasto('');\r\n            guardarNombreGasto('');\r\n          }\r\n    }\r\n    return (\r\n        <form\r\n            onSubmit= {agregarGasto}\r\n        >\r\n            <h2>Agrega tus gastos Aqu√≠</h2>\r\n            {error ? <Error mensaje = \"Ambos campos son obligatorios o Presupuesto incorrecto\"/> : null}\r\n            <div className=\"campo\">\r\n                <label>Nombre del gasto</label>\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. Transporte\"\r\n                    onChange={e => guardarNombreGasto(e.target.value)}\r\n                    value ={nombreGasto}\r\n                />\r\n            </div>\r\n            <div className=\"campo\">\r\n                <label>Cantidad del gasto</label>\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"ej. 300\"\r\n                    onChange={e => guardarCantidadGasto(parseInt(e.target.value,10))}\r\n                    value ={cantidadGasto}\r\n                />\r\n            </div>\r\n            <input type=\"submit\" className=\"button-primary u-full-width\" value=\"Agregar Gasto\"/>\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Formulario;","import React from 'react';\r\n\r\nconst Gasto = ({gasto}) => (\r\n        <li className = \"gastos\">\r\n            <p>\r\n                {gasto.nombreGasto}\r\n                <span className=\"gasto\">$ {gasto.cantidadGasto}</span>\r\n            </p>\r\n        </li>\r\n    );\r\n\r\nexport default Gasto;","import React from 'react';\r\nimport Gasto from './Gasto';\r\n\r\nfunction Listado({gastos}){\r\n    return (\r\n        <div className=\"gastos-realizados\">\r\n            <h2> Listado</h2>\r\n            {gastos.map(gasto =>(\r\n                <Gasto \r\n                    key ={gasto.id}\r\n                    gasto = {gasto}\r\n\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Listado;","export const revisarPresupuesto = (presupuesto,restante) => {\r\n    let clase;\r\n    // Comprobar el 25% \r\n    if( (presupuesto / 4) > restante) {\r\n         clase = 'alert alert-danger';\r\n    } else if( (presupuesto / 2) > restante) {\r\n        clase = 'alert alert-warning'\r\n    } else {\r\n        clase = 'alert alert alert-success';\r\n    }\r\n    return clase;\r\n} ","import React, {Fragment} from \"react\";\r\nimport {revisarPresupuesto} from '../Helpers';\r\n\r\nconst ControlPresupuesto = ({presupuesto,restante}) =>(\r\n    <Fragment>\r\n        <div className=\"alert alert-primary\">\r\n            Presupuesto: $ {presupuesto}\r\n        </div>\r\n        <div className={revisarPresupuesto(presupuesto,restante)}>\r\n            Restante: $ {restante}\r\n        </div>\r\n\r\n    </Fragment>\r\n); \r\n\r\nexport default ControlPresupuesto;\r\n","import React, { useState, useEffect } from \"react\";\nimport Pregunta from \"./components/Pregunta\";\nimport Formulario from \"./components/Formulario\";\nimport Listado from \"./components/Listado.js\";\nimport ControlPresupuesto from \"./components/ControlPresupuesto\";\n\nfunction App() {\n  // state principal\n  const [presupuesto, guardarPresupuesto] = useState(0);\n  const [restante, guardarRestante] = useState(0);\n  const [pregunta, guardarPregunta] = useState(true);\n  const [crearGasto, guardarCrearGasto] = useState(false);\n  const [gasto,guardarGasto] = useState({});\n  const [gastos, guardarGastos] = useState([])\n\n  useEffect(() =>{\n    if(crearGasto){\n      const listadoGastos = [...gastos, gasto];\n      guardarGastos(listadoGastos);\n\n      // Restar el presupuesto\n      const presupuestoRestante = restante- gasto.cantidadGasto;\n      guardarRestante(presupuestoRestante);\n\n      // una vez que se agrega vuelve a false\n      guardarCrearGasto(false);\n    }\n  },[crearGasto,gastos,gasto,restante]);\n\n  return (\n    <div className=\"App container\">\n      <header>\n        <h1>Gasto Semanal</h1>\n        <div className=\"contenido-principal contenido\">\n          {pregunta ? (\n            <Pregunta\n              guardarPresupuesto={guardarPresupuesto}\n              guardarPregunta={guardarPregunta}\n              guardarRestante = {guardarRestante}\n            />\n          ) : (\n            <div className=\"row\">\n              <div className=\"one-half column\">\n                <Formulario \n                  guardarGasto = {guardarGasto}\n                  guardarCrearGasto = {guardarCrearGasto}\n                />\n              </div>\n              <div className=\"one-half column\">\n                <Listado \n                  gastos = {gastos}\n                />\n\n                <ControlPresupuesto \n                  presupuesto = {presupuesto}\n                  restante = {restante}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}